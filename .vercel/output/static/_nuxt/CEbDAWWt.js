import{P as k}from"./Rft30mdz.js";import{n as f,z as m,o as c,c as h,a as o,t as d,u as r,_ as y,r as u,s as v,B as P}from"./iurotYuZ.js";import"./B3X8K9mg.js";const w={class:"planet-card-container"},A={class:"planet-name"},C={class:"planet-info"},g={class:"biome"},B={class:"owner"},b=f({__name:"inactivePlanetCard",props:{planet:{}},async setup(i){let e,a;const l=i,n=([e,a]=m(()=>{var t;return JSON.parse((t=l.planet)==null?void 0:t.biome)}),e=await e,a(),e);return(t,p)=>{var s,_;return c(),h("div",w,[o("div",A,[o("h3",null,d(((s=t.planet)==null?void 0:s.name)||"Unknown planet"),1)]),o("div",C,[o("p",g,"Biome: "+d(((_=r(n))==null?void 0:_.slug)||"Unknown"),1),o("p",B,"Controlled by "+d(t.planet.owner),1)])])}}}),$=y(b,[["__scopeId","data-v-a89d798a"]]),S=f({__name:"liberateTask",props:{task:{}},async setup(i){let e,a;const l=i,n=u(),t=u(),p=([e,a]=m(()=>$fetch(`/api/getPlanet/${l.task.values[2]}`)),e=await e,a(),e),s=([e,a]=m(()=>$fetch(`/api/getActivePlanet/${l.task.values[2]}`)),e=await e,a(),e);return n.value=Array.isArray(p)?p[0]:void 0,t.value=Array.isArray(s)?s[0]:void 0,(_,x)=>(c(),h("div",null,[r(t)?(c(),v(k,{key:0,planet:r(t)},null,8,["planet"])):r(n)?(c(),v($,{key:1,planet:r(n)},null,8,["planet"])):P("",!0)]))}});export{S as default};
